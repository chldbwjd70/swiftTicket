buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.mariadb.jdbc:mariadb-java-client:3.3.3' }
}

plugins {
    id 'java'
}

group = 'com.example.domain'
version = '1.0'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: "${springBootVersion}"
    implementation group:'org.springframework.boot', name:'spring-boot-starter-data-mongodb', version: "${springBootVersion}"
    implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '3.3.3'
    testImplementation group: 'com.h2database', name: 'h2', version: '2.2.224'

    // ToDo. 인프라 쪽으로 옮겨야 할듯
    implementation group:'org.springframework.boot', name:'spring-boot-starter-data-mongodb', version: "${springBootVersion}"

    //Querydsl 추가
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api:3.0.0"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api:3.0.0"

    implementation group: 'org.mybatis.spring.boot', name: 'mybatis-spring-boot-starter', version: '2.3.0'


    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-webflux', version: "${springBootVersion}"

    implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'
}

// QueryDsl generated 소스 위치
def generated = 'src/main/generated'
tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(generated))
}
sourceSets {
    main.java.srcDirs += [ generated ]
}
clean {
    delete file(generated)
}

test {
    useJUnitPlatform()
}