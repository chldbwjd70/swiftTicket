plugins {
    id 'java'
    id 'org.springframework.boot' version "${springBootVersion}"
}

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'war'

repositories {
    mavenCentral()
}

dependencies {
    implementation(project(':domain'))
    implementation(project(':application'))
    implementation(project(':infraStructure'))

//     implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: "${springBootVersion}"

    // 아래 두개는 api 컨트롤러를 토함해 http 요청을 처리하는 기능을 제공함.
    implementation "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-webflux', version: "${springBootVersion}"
    // 요청 데이터의 유효성 검사를 위한 기능 추가
    implementation "org.springframework.boot:spring-boot-starter-validation:${springBootVersion}"


    // security
    implementation "org.springframework.boot:spring-boot-starter-security:${springBootVersion}"


    //JWT
    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'

    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}



bootJar {
    mainClass.set('com.example.swiftTicket.SwiftTicketApp')
}

test {
    useJUnitPlatform()
}